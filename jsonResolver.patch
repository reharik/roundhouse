From f325040e851a166a62bffcd5d17dc25462de50e8 Mon Sep 17 00:00:00 2001
From: Raif Harik <reharik@gmail.com>
Date: Wed, 25 Jun 2014 13:38:35 -0500
Subject: [PATCH 1/3] added jsonVersionResolver

---
 .../roundhouse/resolvers/JsonVersionResolver.cs    | 64 ++++++++++++++++++++++
 1 file changed, 64 insertions(+)
 create mode 100644 product/roundhouse/resolvers/JsonVersionResolver.cs

diff --git a/product/roundhouse/resolvers/JsonVersionResolver.cs b/product/roundhouse/resolvers/JsonVersionResolver.cs
new file mode 100644
index 0000000..151265b
--- /dev/null
+++ b/product/roundhouse/resolvers/JsonVersionResolver.cs
@@ -0,0 +1,64 @@
+using System;
+using System.Collections.Generic;
+using System.IO;
+using System.Linq;
+using Newtonsoft.Json;
+using roundhouse.infrastructure.filesystem;
+using roundhouse.infrastructure.logging;
+
+namespace roundhouse.resolvers
+{
+    public class JsonVersionResolver : VersionResolver
+    {
+        private readonly FileSystemAccess file_system;
+        private readonly string version_file;
+
+        public JsonVersionResolver(FileSystemAccess file_system, string version_file)
+        {
+            this.file_system = file_system;
+            this.version_file = file_system.get_full_path(version_file);
+        }
+
+        public bool meets_criteria()
+        {
+            return version_file.EndsWith(".json", StringComparison.OrdinalIgnoreCase);
+        }
+
+        public string resolve_version()
+        {
+            Log.bound_to(this).log_an_info_event_containing(
+                " Attempting to resolve version from json file {0}.", version_file);
+
+            string version = "0";
+            if (file_system.file_exists(version_file))
+            {
+                try
+                {
+                    using (StreamReader r = new StreamReader(version_file))
+                    {
+                        string json = r.ReadToEnd();
+                        JsonVersionNumber item = JsonConvert.DeserializeObject<List<JsonVersionNumber>>(json).FirstOrDefault();
+                        version = item.version;
+                        Log.bound_to(this).log_an_info_event_containing(" Found version {0} from {1}.", version, version_file);
+                    }
+                }
+                catch (Exception e)
+                {
+                    Log.bound_to(this).log_an_error_event_containing(
+                        "Unable to get version from json file {0}:{1}{2}", version_file, Environment.NewLine, e.Message);
+                }
+            }
+            else
+            {
+                Log.bound_to(this).log_a_warning_event_containing(
+                    "Unable to get version from json file {0}. File doesn't exist.", version_file);
+            }
+
+            return version;
+        }
+        internal class JsonVersionNumber
+        {
+            public string version { get; set; }
+        }
+    }
+}
\ No newline at end of file
-- 
1.8.4.msysgit.0


From 7d4309c1a8f0827497507d5c11574e84e9306c74 Mon Sep 17 00:00:00 2001
From: Raif Harik <reharik@gmail.com>
Date: Tue, 1 Jul 2014 17:35:56 -0500
Subject: [PATCH 2/3] added jsonVersionResolver

---
 product/roundhouse.console/Program.cs                         |  2 +-
 .../infrastructure.app/builders/VersionResolverBuilder.cs     |  3 ++-
 product/roundhouse/packages.config                            |  1 +
 product/roundhouse/resolvers/JsonVersionResolver.cs           | 11 ++++++-----
 product/roundhouse/roundhouse.csproj                          |  5 +++++
 14 files changed, 23 insertions(+), 24 deletions(-)

diff --git a/product/roundhouse.console/Program.cs b/product/roundhouse.console/Program.cs
index a3863e5..7c5fdc9 100644
--- a/product/roundhouse.console/Program.cs
+++ b/product/roundhouse.console/Program.cs
@@ -128,7 +128,7 @@ private static void parse_arguments_and_set_up_configuration(ConfigurationProper
                          "RepositoryPath - The repository. A string that can be anything. Used to track versioning along with the version. Defaults to null."),
                      option => configuration.RepositoryPath = option)
                 .Add("vf=|versionfile=",
-                     string.Format("VersionFile - Either a .XML file, a .DLL or a .TXT file that a version can be resolved from. Defaults to \"{0}\".",
+                     string.Format("VersionFile - Either a .XML file, a .DLL or a .TXT or a .json file that a version can be resolved from. Defaults to \"{0}\".",
                                    ApplicationParameters.default_version_file),
                      option => configuration.VersionFile = option)
                 .Add("vx=|versionxpath=",
diff --git a/product/roundhouse/infrastructure.app/builders/VersionResolverBuilder.cs b/product/roundhouse/infrastructure.app/builders/VersionResolverBuilder.cs
index 2be35e7..f6ae5a1 100644
--- a/product/roundhouse/infrastructure.app/builders/VersionResolverBuilder.cs
+++ b/product/roundhouse/infrastructure.app/builders/VersionResolverBuilder.cs
@@ -12,8 +12,9 @@ public static VersionResolver build(FileSystemAccess file_system, ConfigurationP
             VersionResolver dll_version_finder = new DllFileVersionResolver(file_system, configuration_property_holder.VersionFile);
             VersionResolver text_version_finder = new TextVersionResolver(file_system, configuration_property_holder.VersionFile);
             VersionResolver script_number_version_finder = new ScriptfileVersionResolver(file_system, configuration_property_holder);
+            VersionResolver json_version_finder = new JsonVersionResolver(file_system, configuration_property_holder.VersionFile);
 
-            IEnumerable<VersionResolver> resolvers = new List<VersionResolver> { xml_version_finder, dll_version_finder, text_version_finder, script_number_version_finder };
+            IEnumerable<VersionResolver> resolvers = new List<VersionResolver> { xml_version_finder, dll_version_finder, text_version_finder, script_number_version_finder, json_version_finder };
 
             return new ComplexVersionResolver(resolvers);
         }
diff --git a/product/roundhouse/packages.config b/product/roundhouse/packages.config
index 53aa453..e075e35 100644
--- a/product/roundhouse/packages.config
+++ b/product/roundhouse/packages.config
@@ -3,6 +3,7 @@
   <package id="FluentNHibernate" version="1.3.0.733" targetFramework="net35" />
   <package id="Iesi.Collections" version="3.3.2.4000" targetFramework="net35" />
   <package id="log4net" version="2.0.0" targetFramework="net35" />
+  <package id="Newtonsoft.Json" version="6.0.3" targetFramework="net35" />
   <package id="NHibernate" version="3.3.2.4000" targetFramework="net35" />
   <package id="PublishedApplications" version="2.1.0.0" targetFramework="net35" />
   <package id="structuremap" version="2.6.3" />
diff --git a/product/roundhouse/resolvers/JsonVersionResolver.cs b/product/roundhouse/resolvers/JsonVersionResolver.cs
index 151265b..8e7d74f 100644
--- a/product/roundhouse/resolvers/JsonVersionResolver.cs
+++ b/product/roundhouse/resolvers/JsonVersionResolver.cs
@@ -37,7 +37,7 @@ public string resolve_version()
                     using (StreamReader r = new StreamReader(version_file))
                     {
                         string json = r.ReadToEnd();
-                        JsonVersionNumber item = JsonConvert.DeserializeObject<List<JsonVersionNumber>>(json).FirstOrDefault();
+                        JsonVersionNumber item = JsonConvert.DeserializeObject<JsonVersionNumber>(json);
                         version = item.version;
                         Log.bound_to(this).log_an_info_event_containing(" Found version {0} from {1}.", version, version_file);
                     }
@@ -56,9 +56,10 @@ public string resolve_version()
 
             return version;
         }
-        internal class JsonVersionNumber
-        {
-            public string version { get; set; }
-        }
     }
+    public class JsonVersionNumber
+    {
+        public string version { get; set; }
+    }
+
 }
\ No newline at end of file
diff --git a/product/roundhouse/roundhouse.csproj b/product/roundhouse/roundhouse.csproj
index 7ee37e5..556bb6b 100644
--- a/product/roundhouse/roundhouse.csproj
+++ b/product/roundhouse/roundhouse.csproj
@@ -78,6 +78,10 @@
     <Reference Include="Microsoft.Build.Framework">
       <Private>True</Private>
     </Reference>
+    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
+      <SpecificVersion>False</SpecificVersion>
+      <HintPath>..\..\packages\Newtonsoft.Json.6.0.3\lib\net35\Newtonsoft.Json.dll</HintPath>
+    </Reference>
     <Reference Include="NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4, processorArchitecture=MSIL">
       <SpecificVersion>False</SpecificVersion>
       <HintPath>..\..\packages\NHibernate.3.3.2.4000\lib\Net35\NHibernate.dll</HintPath>
@@ -130,6 +134,7 @@
     <Compile Include="parameters\AdoNetParameter.cs" />
     <Compile Include="parameters\IParameter.cs" />
     <Compile Include="Migrate.cs" />
+    <Compile Include="resolvers\JsonVersionResolver.cs" />
     <Compile Include="resolvers\ScriptfileVersionResolver.cs" />
     <Compile Include="resolvers\TextVersionResolver.cs" />
     <Compile Include="RoundhousEFluentNHibernateDiffingType.cs" />
-- 
1.8.4.msysgit.0


From b4286208ebac90adbc8fe6a4c03fcab285e2e386 Mon Sep 17 00:00:00 2001
From: Raif Harik <reharik@gmail.com>
Date: Wed, 2 Jul 2014 09:17:02 -0500
Subject: [PATCH 3/3] using file_system

---
 product/roundhouse/resolvers/JsonVersionResolver.cs | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

diff --git a/product/roundhouse/resolvers/JsonVersionResolver.cs b/product/roundhouse/resolvers/JsonVersionResolver.cs
index 8e7d74f..601a643 100644
--- a/product/roundhouse/resolvers/JsonVersionResolver.cs
+++ b/product/roundhouse/resolvers/JsonVersionResolver.cs
@@ -34,13 +34,10 @@ public string resolve_version()
             {
                 try
                 {
-                    using (StreamReader r = new StreamReader(version_file))
-                    {
-                        string json = r.ReadToEnd();
-                        JsonVersionNumber item = JsonConvert.DeserializeObject<JsonVersionNumber>(json);
-                        version = item.version;
-                        Log.bound_to(this).log_an_info_event_containing(" Found version {0} from {1}.", version, version_file);
-                    }
+                    string json = file_system.read_file_text(version_file);
+                    JsonVersionNumber item = JsonConvert.DeserializeObject<JsonVersionNumber>(json);
+                    version = item.version;
+                    Log.bound_to(this).log_an_info_event_containing(" Found version {0} from {1}.", version, version_file);
                 }
                 catch (Exception e)
                 {
-- 
1.8.4.msysgit.0

